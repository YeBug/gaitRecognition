digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="main",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Tracker::setInputImage1",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html#a8bec3e027374f6b1512e48a8015379ab",tooltip="Give the array of picture the image that will be used as main input to all algoritm."];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Tracker::setHeatMapImage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html#a97230feb600bdd4f08f86b3498b0c912",tooltip="Give the array of picture the image that will be used as heat map."];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Tracker::reInit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html#a8ccd74b314363524b19dfab49c470b4c",tooltip="This function is used to clear the datas as much a you need, since it&#39;s most video utilisation..."];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Tracker::setInputImage2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html#a4c28de1cc01c2894e177fe18023cda79",tooltip="Give the array of picture the image that will be used as second input to calculte flow mostly..."];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Tracker::runAlgos",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html#ad4794516e58ba77a6183dcfdebb1ec0e",tooltip="this is the main function used, it starts one step the whole calcul you want to thred or loop..."];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="CornerFinder::setCorner",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_corner_finder.html#a7d40ad75eaceb4275255352fc7898169",tooltip="This setter will be used if the user wants to change the array of Corners in use."];
  Node6 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="CornerPrecizer::setCorner",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_corner_precizer.html#a7d40ad75eaceb4275255352fc7898169",tooltip="This setter will be used if the user wants to change the array of Corners in use."];
  Node6 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="PyrLukasKanade::setCorner",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_pyr_lukas_kanade.html#a7d40ad75eaceb4275255352fc7898169",tooltip="This setter will be used if the user wants to change the array of Corners in use."];
  Node6 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="CornerFinder::perform",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_corner_finder.html#a68888f139e418f88481aa86480de3cec",tooltip="This function perform the algorithme she is associated with."];
  Node6 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Tracker::addCorners",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html#a434f429d01e9b821e347c29eca0b6131",tooltip="This function add a certain number of corners that are used to display the heat map picture..."];
  Node6 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="CornerPrecizer::perform",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_corner_precizer.html#a68888f139e418f88481aa86480de3cec",tooltip="This function perform the algorithme she is associated with."];
  Node6 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="PyrLukasKanade::setCount",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_pyr_lukas_kanade.html#aff3d75dfcd9df870c2c7006e13ba7467",tooltip="This setter will be used if the user wants to change the number of corners that have been given as pa..."];
  Node6 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="PyrLukasKanade::perform",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_pyr_lukas_kanade.html#a68888f139e418f88481aa86480de3cec",tooltip="This function perform the algorithme she is associated with."];
  Node6 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="PyrLukasKanade::getOutCorners",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_pyr_lukas_kanade.html#a8e87b0b5311ffb15709e32d4e3e924c4",tooltip="This getter send back the output corners that have been computed."];
  Node1 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="Tracker::getCorners",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html#aba064f902a9c509fd6ba4c62e2a01f5b",tooltip="Give a vector containing all input corners."];
  Node1 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="Tracker::getOutCorners",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html#a8e87b0b5311ffb15709e32d4e3e924c4",tooltip="Give a vector containing all the computed corners, via optical flow algorithm."];
  Node1 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Tracker::reallocCorners",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html#a378995c78fdc6a0b2c03dd134fe72fe4",tooltip="this function reinit both corners and outcorners set of points not to make errors occur with reminesc..."];
  Node1 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="Tracker::getCornerSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html#a57e02b64df9ce890fc7cd9ccf53c652a",tooltip="Give the number of corners found and in used by the algoritme to be used in non optical algrorithm..."];
  Node1 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="Tracker::plotField",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html#aac08a632db0f929637c81e071c919b9a",tooltip="This function plot the field of point 1 by 1 with the ones returned by getOurCorners, only use the points given to it."];
  Node1 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="Thread::start",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_thread.html#ac92d3b835636641550b12b0f93daf21d",tooltip="This function allows you to start a thread just as if you were using basic C-Thread. In fact, it create the thread and give the private C-Function in argument whoch will start run()."];
  Node21 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="runThread",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$reg_sin_thread_8cpp.html#a23b178a0554912cad547105a909fb461"];
  Node1 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="Thread::join",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_thread.html#ac942067a7e5a314610c1e89ff801f3bd",tooltip="This function allows to take the ouput as the thread when the threaded funcion, run() here..."];
}
